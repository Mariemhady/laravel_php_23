Database --> connection 

ORM --> object relationa mapper 


table ---> class 
record --> object  



migration files --> build database --> tables, columnes datatypes 


1- create migration file  --> done 

2- run migration files --> database 
------------------------------------------------

1- .env --> create your database  

2- build database --> tables, columns, ....

    migrations files --> php artisan make:migration create_table_NAME

    run migration files -->php artisan migrate 

    run migration files -->php artisan migrate:status 
    run migration files -->php artisan migrate:fresh
    run migration files -->php artisan migrate:refresh 
    run migration files -->php artisan migrate:reset   



3- MODEL --> 
    php artisan make:model Student (single)  --> table students 
    model post --> posts 
     _______________________________________________
     ---> 1- create laravel project
     --> 2- create your database 
     3- config your .env file using database info 
     4- create your tables using migratins files:
            php artisan make:migration create_NAMES_table
    5- create your model 
            php artisan make:model Name 

    6- create your contrlloer 
        php artisan make:controller NameController -m NAMEMODEL  -->generate resource contrlloer --> crud operations --> 
            index create store edit update show destory 

    7- create your routes: (web.php)     


8- php artisan make:request StoreTrackController --> to add the validation
________________________________________________________

9- Relation --> Students -> track 


    student --> belongs to --> track 
    track --> has many --> students 

    table --> students --> fk --> track 
    -----------------------------------
    Day 4: 

    1- upload image: 
        



    2-  
    Authintcation --> Valid --> trusted --> email + pass 

    Authorization --> Permission --> What user Can do ?


    Middleware --> 
            3 parts:    
                    global 
                    routes
                    application 

                    ---------------
                    authorization: 

            1- GATES --> 

            2- POLICES --> 

            3- MIDDLEWARE

        --------------------------------------------

        Gate: 

                providres/AuthServiceProvidre 
                        define all your gates  

                controller-->if(Gate::allows("is-admin")){

                view --> @can("GATENAME")

        Polices: 

                php artisan make:policy StudentPolicy 

                Plicies/StudentPolicy

                in StudentPolicy --> 
                        function destroy(){
                            can("is-manager)
                        }

                add the new policy --> authserviceprovider


            Middleware: 
                